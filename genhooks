#!/usr/bin/env sh

AS="${AS:-mips64-gcc}"
CC="${CC:-mips64-gcc}"
NM="${NM:-mips64-nm}"
READELF="${READELF:-mips64-readelf}"

elf="$1"
if [ -z "$elf" ]; then
  echo usage: \`genhooks \<elf-file\>\`
  exit
fi

z64def()
{
  printf "#include \"src/gz/z64.h\"\n$1" | $CC -E - $CPPFLAGS | tail -n 1 | sed -e s/^M//g
}

gzsym()
{
  echo "0x`$NM "$elf" | sed -e s/^M//g | grep " $1\$" | sed -E -e "s/([0-9A-Fa-f]{8})?([0-9A-Fa-f]{8}).*/\2/"`"
}

asmgsc()
{
  addr="$(printf "%d" "$1")"
  addr="$(expr "$addr" % 536870912 + 2164260864)" # addr = addr & 0x1FFFFFFF | 0x81000000
  tmpfile="$(mktemp)"
  echo ".set noreorder; .set noat; $2" | $AS -x assembler -c - -o "$tmpfile"
  $READELF -x .text "$tmpfile" | grep "0x[0-9A-Fa-f]\{8\}" | grep -o " [0-9A-Fa-f]\{8\}" |
  while read -r line; do
    printf "%08X %04X\n" "$addr" "0x`echo "$line" | sed -e "s/\(....\)..../\1/"`"
    addr="$(expr "$addr" + 2)"
    printf "%08X %04X\n" "$addr" "0x`echo "$line" | sed -e "s/....\(....\)/\1/"`"
    addr="$(expr "$addr" + 2)"
  done
  rm -f "$tmpfile"
}

asmgsc "$(z64def z64_main_hook_addr)"             "jal $(gzsym _start);"
asmgsc "$(z64def z64_entrance_offset_hook_addr)"  "jal $(gzsym entrance_offset_hook); nop;"
asmgsc "$(z64def z64_srand_call_addr)"            "jal $(gzsym srand_hook);"
asmgsc "$(z64def z64_frame_input_call_addr)"      "jal $(gzsym input_hook); nop;"
asmgsc "$(z64def z64_ocarina_update_call_addr)"   "jal $(gzsym ocarina_update_hook);"
asmgsc "$(z64def z64_ocarina_input_call_addr)"    "jal $(gzsym ocarina_input_hook);"
asmgsc "$(z64def z64_ocarina_sync_hook_addr)"     "jal $(gzsym ocarina_sync_hook); lui \$t7, 0x8012; bnel \$v0, \$zero, 0x000C;"
asmgsc "$(z64def z64_room_load_sync_hook_addr)"   "jal $(gzsym room_load_sync_hook);"
asmgsc "$(z64def z64_minimap_disable_1_addr)"     "beq \$zero, \$zero, . + 0x082C;"
asmgsc "$(z64def z64_minimap_disable_2_addr)"     "beq \$zero, \$zero, . + 0x0098;"
#asmgsc "$(z64def z64_guPerspectiveF_camo_addr)"   "sw \$a2, 0x0038(\$sp);"
#asmgsc "$(z64def z64_guPerspective_camo_addr)"    "nop; nop;"
disp_hook="$(gzsym disp_hook)"
asmgsc "$(z64def z64_disp_swap_1_addr)"           "jal $disp_hook;"
asmgsc "$(z64def z64_disp_swap_2_addr)"           "jal $disp_hook;"
asmgsc "$(z64def z64_disp_swap_3_addr)"           "jal $disp_hook;"
asmgsc "$(z64def z64_disp_swap_4_addr)"           "jal $disp_hook;"
